# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: awssso

before:
  hooks:
    - go mod tidy
    - ./scripts/completions.sh

builds:
  - id: awssso
    binary: awssso
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - amd64
      - arm64
    tags:
      - nodev
    flags:
      - -trimpath
    ldflags:
      - "-s -w"
      - -X main.buildVersion={{.Version}}
      - -X main.buildSha={{.Commit}}

gomod:
  proxy: true

archives:
  - formats:
      - tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: ["zip"]

brews:
  - repository:
      owner: webdestroya
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_SCOOP_GITHUB_TOKEN }}"
    directory: Formula
    homepage: https://github.com/webdestroya/aws-sso
    url_template: "https://github.com/webdestroya/aws-sso/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    description: "Writes credentials for AWS SSO'd accounts so that older applications can use them."
    skip_upload: auto
    license: "MIT"
    commit_author:
      name: cloud87bot
      email: 114977785+cloud87bot@users.noreply.github.com
    test: |
      system "#{bin}/awssso --help"
    install: |
      bin.install "awssso"

scoops:
  - repository:
      owner: webdestroya
      name: scoop-bucket
      token: "{{ .Env.HOMEBREW_SCOOP_GITHUB_TOKEN }}"
      branch: main
    url_template: "https://github.com/webdestroya/aws-sso/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    commit_author:
      name: cloud87bot
      email: 114977785+cloud87bot@users.noreply.github.com
    homepage: https://github.com/webdestroya/aws-sso
    description: "Writes credentials for AWS SSO'd accounts so that older applications can use them."
    license: MIT

nfpms:
  - id: nfpm-default
    package_name: awssso
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    vendor: Mitch Dempsey
    homepage: https://github.com/webdestroya/aws-sso
    maintainer: Mitch Dempsey <webdestroya@users.noreply.github.com>
    description: "Writes credentials for AWS SSO'd accounts so that older applications can use them."
    license: MIT
    section: utils
    priority: extra
    formats:
      - deb
      - rpm
      - apk

universal_binaries:
  - id: awssso
    name_template: "{{ .ProjectName }}"
    replace: false

checksum:
  name_template: "checksums.txt"

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: checksum
    output: true

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

dockers:
  - image_templates:
      - "ghcr.io/webdestroya/aws-sso:{{ .Tag }}"
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"

docker_signs:
  - cmd: cosign
    artifacts: images
    output: true
    args:
      - "sign"
      - "${artifact}"
      - "--yes"